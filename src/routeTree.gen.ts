/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedProfilesIndexRouteImport } from './routes/_authenticated/profiles/index'
import { Route as AuthenticatedAddressesIndexRouteImport } from './routes/_authenticated/addresses/index'
import { Route as AuthenticatedProfilesNewRouteImport } from './routes/_authenticated/profiles/new'
import { Route as AuthenticatedAddressesNewRouteImport } from './routes/_authenticated/addresses/new'
import { Route as AuthenticatedCatalogTagsIndexRouteImport } from './routes/_authenticated/catalog/tags/index'
import { Route as AuthenticatedCatalogProductsIndexRouteImport } from './routes/_authenticated/catalog/products/index'
import { Route as AuthenticatedCatalogCategoriesIndexRouteImport } from './routes/_authenticated/catalog/categories/index'
import { Route as AuthenticatedProfilesProfileIdEditRouteImport } from './routes/_authenticated/profiles/$profileId/edit'
import { Route as AuthenticatedCatalogTagsNewRouteImport } from './routes/_authenticated/catalog/tags/new'
import { Route as AuthenticatedCatalogProductsNewRouteImport } from './routes/_authenticated/catalog/products/new'
import { Route as AuthenticatedCatalogCategoriesNewRouteImport } from './routes/_authenticated/catalog/categories/new'
import { Route as AuthenticatedAddressesAddressIdEditRouteImport } from './routes/_authenticated/addresses/$addressId/edit'
import { Route as AuthenticatedCatalogTagsTagIdEditRouteImport } from './routes/_authenticated/catalog/tags/$tagId/edit'
import { Route as AuthenticatedCatalogProductsProductIdEditRouteImport } from './routes/_authenticated/catalog/products/$productId/edit'
import { Route as AuthenticatedCatalogCategoriesCategoryIdEditRouteImport } from './routes/_authenticated/catalog/categories/$categoryId/edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedProfilesIndexRoute =
  AuthenticatedProfilesIndexRouteImport.update({
    id: '/profiles/',
    path: '/profiles/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAddressesIndexRoute =
  AuthenticatedAddressesIndexRouteImport.update({
    id: '/addresses/',
    path: '/addresses/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedProfilesNewRoute =
  AuthenticatedProfilesNewRouteImport.update({
    id: '/profiles/new',
    path: '/profiles/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAddressesNewRoute =
  AuthenticatedAddressesNewRouteImport.update({
    id: '/addresses/new',
    path: '/addresses/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogTagsIndexRoute =
  AuthenticatedCatalogTagsIndexRouteImport.update({
    id: '/catalog/tags/',
    path: '/catalog/tags/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogProductsIndexRoute =
  AuthenticatedCatalogProductsIndexRouteImport.update({
    id: '/catalog/products/',
    path: '/catalog/products/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogCategoriesIndexRoute =
  AuthenticatedCatalogCategoriesIndexRouteImport.update({
    id: '/catalog/categories/',
    path: '/catalog/categories/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedProfilesProfileIdEditRoute =
  AuthenticatedProfilesProfileIdEditRouteImport.update({
    id: '/profiles/$profileId/edit',
    path: '/profiles/$profileId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogTagsNewRoute =
  AuthenticatedCatalogTagsNewRouteImport.update({
    id: '/catalog/tags/new',
    path: '/catalog/tags/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogProductsNewRoute =
  AuthenticatedCatalogProductsNewRouteImport.update({
    id: '/catalog/products/new',
    path: '/catalog/products/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogCategoriesNewRoute =
  AuthenticatedCatalogCategoriesNewRouteImport.update({
    id: '/catalog/categories/new',
    path: '/catalog/categories/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAddressesAddressIdEditRoute =
  AuthenticatedAddressesAddressIdEditRouteImport.update({
    id: '/addresses/$addressId/edit',
    path: '/addresses/$addressId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogTagsTagIdEditRoute =
  AuthenticatedCatalogTagsTagIdEditRouteImport.update({
    id: '/catalog/tags/$tagId/edit',
    path: '/catalog/tags/$tagId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogProductsProductIdEditRoute =
  AuthenticatedCatalogProductsProductIdEditRouteImport.update({
    id: '/catalog/products/$productId/edit',
    path: '/catalog/products/$productId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCatalogCategoriesCategoryIdEditRoute =
  AuthenticatedCatalogCategoriesCategoryIdEditRouteImport.update({
    id: '/catalog/categories/$categoryId/edit',
    path: '/catalog/categories/$categoryId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/addresses/new': typeof AuthenticatedAddressesNewRoute
  '/profiles/new': typeof AuthenticatedProfilesNewRoute
  '/addresses': typeof AuthenticatedAddressesIndexRoute
  '/profiles': typeof AuthenticatedProfilesIndexRoute
  '/addresses/$addressId/edit': typeof AuthenticatedAddressesAddressIdEditRoute
  '/catalog/categories/new': typeof AuthenticatedCatalogCategoriesNewRoute
  '/catalog/products/new': typeof AuthenticatedCatalogProductsNewRoute
  '/catalog/tags/new': typeof AuthenticatedCatalogTagsNewRoute
  '/profiles/$profileId/edit': typeof AuthenticatedProfilesProfileIdEditRoute
  '/catalog/categories': typeof AuthenticatedCatalogCategoriesIndexRoute
  '/catalog/products': typeof AuthenticatedCatalogProductsIndexRoute
  '/catalog/tags': typeof AuthenticatedCatalogTagsIndexRoute
  '/catalog/categories/$categoryId/edit': typeof AuthenticatedCatalogCategoriesCategoryIdEditRoute
  '/catalog/products/$productId/edit': typeof AuthenticatedCatalogProductsProductIdEditRoute
  '/catalog/tags/$tagId/edit': typeof AuthenticatedCatalogTagsTagIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/addresses/new': typeof AuthenticatedAddressesNewRoute
  '/profiles/new': typeof AuthenticatedProfilesNewRoute
  '/addresses': typeof AuthenticatedAddressesIndexRoute
  '/profiles': typeof AuthenticatedProfilesIndexRoute
  '/addresses/$addressId/edit': typeof AuthenticatedAddressesAddressIdEditRoute
  '/catalog/categories/new': typeof AuthenticatedCatalogCategoriesNewRoute
  '/catalog/products/new': typeof AuthenticatedCatalogProductsNewRoute
  '/catalog/tags/new': typeof AuthenticatedCatalogTagsNewRoute
  '/profiles/$profileId/edit': typeof AuthenticatedProfilesProfileIdEditRoute
  '/catalog/categories': typeof AuthenticatedCatalogCategoriesIndexRoute
  '/catalog/products': typeof AuthenticatedCatalogProductsIndexRoute
  '/catalog/tags': typeof AuthenticatedCatalogTagsIndexRoute
  '/catalog/categories/$categoryId/edit': typeof AuthenticatedCatalogCategoriesCategoryIdEditRoute
  '/catalog/products/$productId/edit': typeof AuthenticatedCatalogProductsProductIdEditRoute
  '/catalog/tags/$tagId/edit': typeof AuthenticatedCatalogTagsTagIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/addresses/new': typeof AuthenticatedAddressesNewRoute
  '/_authenticated/profiles/new': typeof AuthenticatedProfilesNewRoute
  '/_authenticated/addresses/': typeof AuthenticatedAddressesIndexRoute
  '/_authenticated/profiles/': typeof AuthenticatedProfilesIndexRoute
  '/_authenticated/addresses/$addressId/edit': typeof AuthenticatedAddressesAddressIdEditRoute
  '/_authenticated/catalog/categories/new': typeof AuthenticatedCatalogCategoriesNewRoute
  '/_authenticated/catalog/products/new': typeof AuthenticatedCatalogProductsNewRoute
  '/_authenticated/catalog/tags/new': typeof AuthenticatedCatalogTagsNewRoute
  '/_authenticated/profiles/$profileId/edit': typeof AuthenticatedProfilesProfileIdEditRoute
  '/_authenticated/catalog/categories/': typeof AuthenticatedCatalogCategoriesIndexRoute
  '/_authenticated/catalog/products/': typeof AuthenticatedCatalogProductsIndexRoute
  '/_authenticated/catalog/tags/': typeof AuthenticatedCatalogTagsIndexRoute
  '/_authenticated/catalog/categories/$categoryId/edit': typeof AuthenticatedCatalogCategoriesCategoryIdEditRoute
  '/_authenticated/catalog/products/$productId/edit': typeof AuthenticatedCatalogProductsProductIdEditRoute
  '/_authenticated/catalog/tags/$tagId/edit': typeof AuthenticatedCatalogTagsTagIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard'
    | '/addresses/new'
    | '/profiles/new'
    | '/addresses'
    | '/profiles'
    | '/addresses/$addressId/edit'
    | '/catalog/categories/new'
    | '/catalog/products/new'
    | '/catalog/tags/new'
    | '/profiles/$profileId/edit'
    | '/catalog/categories'
    | '/catalog/products'
    | '/catalog/tags'
    | '/catalog/categories/$categoryId/edit'
    | '/catalog/products/$productId/edit'
    | '/catalog/tags/$tagId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/addresses/new'
    | '/profiles/new'
    | '/addresses'
    | '/profiles'
    | '/addresses/$addressId/edit'
    | '/catalog/categories/new'
    | '/catalog/products/new'
    | '/catalog/tags/new'
    | '/profiles/$profileId/edit'
    | '/catalog/categories'
    | '/catalog/products'
    | '/catalog/tags'
    | '/catalog/categories/$categoryId/edit'
    | '/catalog/products/$productId/edit'
    | '/catalog/tags/$tagId/edit'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/dashboard'
    | '/_authenticated/addresses/new'
    | '/_authenticated/profiles/new'
    | '/_authenticated/addresses/'
    | '/_authenticated/profiles/'
    | '/_authenticated/addresses/$addressId/edit'
    | '/_authenticated/catalog/categories/new'
    | '/_authenticated/catalog/products/new'
    | '/_authenticated/catalog/tags/new'
    | '/_authenticated/profiles/$profileId/edit'
    | '/_authenticated/catalog/categories/'
    | '/_authenticated/catalog/products/'
    | '/_authenticated/catalog/tags/'
    | '/_authenticated/catalog/categories/$categoryId/edit'
    | '/_authenticated/catalog/products/$productId/edit'
    | '/_authenticated/catalog/tags/$tagId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profiles/': {
      id: '/_authenticated/profiles/'
      path: '/profiles'
      fullPath: '/profiles'
      preLoaderRoute: typeof AuthenticatedProfilesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/addresses/': {
      id: '/_authenticated/addresses/'
      path: '/addresses'
      fullPath: '/addresses'
      preLoaderRoute: typeof AuthenticatedAddressesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profiles/new': {
      id: '/_authenticated/profiles/new'
      path: '/profiles/new'
      fullPath: '/profiles/new'
      preLoaderRoute: typeof AuthenticatedProfilesNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/addresses/new': {
      id: '/_authenticated/addresses/new'
      path: '/addresses/new'
      fullPath: '/addresses/new'
      preLoaderRoute: typeof AuthenticatedAddressesNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/tags/': {
      id: '/_authenticated/catalog/tags/'
      path: '/catalog/tags'
      fullPath: '/catalog/tags'
      preLoaderRoute: typeof AuthenticatedCatalogTagsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/products/': {
      id: '/_authenticated/catalog/products/'
      path: '/catalog/products'
      fullPath: '/catalog/products'
      preLoaderRoute: typeof AuthenticatedCatalogProductsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/categories/': {
      id: '/_authenticated/catalog/categories/'
      path: '/catalog/categories'
      fullPath: '/catalog/categories'
      preLoaderRoute: typeof AuthenticatedCatalogCategoriesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profiles/$profileId/edit': {
      id: '/_authenticated/profiles/$profileId/edit'
      path: '/profiles/$profileId/edit'
      fullPath: '/profiles/$profileId/edit'
      preLoaderRoute: typeof AuthenticatedProfilesProfileIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/tags/new': {
      id: '/_authenticated/catalog/tags/new'
      path: '/catalog/tags/new'
      fullPath: '/catalog/tags/new'
      preLoaderRoute: typeof AuthenticatedCatalogTagsNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/products/new': {
      id: '/_authenticated/catalog/products/new'
      path: '/catalog/products/new'
      fullPath: '/catalog/products/new'
      preLoaderRoute: typeof AuthenticatedCatalogProductsNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/categories/new': {
      id: '/_authenticated/catalog/categories/new'
      path: '/catalog/categories/new'
      fullPath: '/catalog/categories/new'
      preLoaderRoute: typeof AuthenticatedCatalogCategoriesNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/addresses/$addressId/edit': {
      id: '/_authenticated/addresses/$addressId/edit'
      path: '/addresses/$addressId/edit'
      fullPath: '/addresses/$addressId/edit'
      preLoaderRoute: typeof AuthenticatedAddressesAddressIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/tags/$tagId/edit': {
      id: '/_authenticated/catalog/tags/$tagId/edit'
      path: '/catalog/tags/$tagId/edit'
      fullPath: '/catalog/tags/$tagId/edit'
      preLoaderRoute: typeof AuthenticatedCatalogTagsTagIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/products/$productId/edit': {
      id: '/_authenticated/catalog/products/$productId/edit'
      path: '/catalog/products/$productId/edit'
      fullPath: '/catalog/products/$productId/edit'
      preLoaderRoute: typeof AuthenticatedCatalogProductsProductIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/catalog/categories/$categoryId/edit': {
      id: '/_authenticated/catalog/categories/$categoryId/edit'
      path: '/catalog/categories/$categoryId/edit'
      fullPath: '/catalog/categories/$categoryId/edit'
      preLoaderRoute: typeof AuthenticatedCatalogCategoriesCategoryIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedAddressesNewRoute: typeof AuthenticatedAddressesNewRoute
  AuthenticatedProfilesNewRoute: typeof AuthenticatedProfilesNewRoute
  AuthenticatedAddressesIndexRoute: typeof AuthenticatedAddressesIndexRoute
  AuthenticatedProfilesIndexRoute: typeof AuthenticatedProfilesIndexRoute
  AuthenticatedAddressesAddressIdEditRoute: typeof AuthenticatedAddressesAddressIdEditRoute
  AuthenticatedCatalogCategoriesNewRoute: typeof AuthenticatedCatalogCategoriesNewRoute
  AuthenticatedCatalogProductsNewRoute: typeof AuthenticatedCatalogProductsNewRoute
  AuthenticatedCatalogTagsNewRoute: typeof AuthenticatedCatalogTagsNewRoute
  AuthenticatedProfilesProfileIdEditRoute: typeof AuthenticatedProfilesProfileIdEditRoute
  AuthenticatedCatalogCategoriesIndexRoute: typeof AuthenticatedCatalogCategoriesIndexRoute
  AuthenticatedCatalogProductsIndexRoute: typeof AuthenticatedCatalogProductsIndexRoute
  AuthenticatedCatalogTagsIndexRoute: typeof AuthenticatedCatalogTagsIndexRoute
  AuthenticatedCatalogCategoriesCategoryIdEditRoute: typeof AuthenticatedCatalogCategoriesCategoryIdEditRoute
  AuthenticatedCatalogProductsProductIdEditRoute: typeof AuthenticatedCatalogProductsProductIdEditRoute
  AuthenticatedCatalogTagsTagIdEditRoute: typeof AuthenticatedCatalogTagsTagIdEditRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedAddressesNewRoute: AuthenticatedAddressesNewRoute,
  AuthenticatedProfilesNewRoute: AuthenticatedProfilesNewRoute,
  AuthenticatedAddressesIndexRoute: AuthenticatedAddressesIndexRoute,
  AuthenticatedProfilesIndexRoute: AuthenticatedProfilesIndexRoute,
  AuthenticatedAddressesAddressIdEditRoute:
    AuthenticatedAddressesAddressIdEditRoute,
  AuthenticatedCatalogCategoriesNewRoute:
    AuthenticatedCatalogCategoriesNewRoute,
  AuthenticatedCatalogProductsNewRoute: AuthenticatedCatalogProductsNewRoute,
  AuthenticatedCatalogTagsNewRoute: AuthenticatedCatalogTagsNewRoute,
  AuthenticatedProfilesProfileIdEditRoute:
    AuthenticatedProfilesProfileIdEditRoute,
  AuthenticatedCatalogCategoriesIndexRoute:
    AuthenticatedCatalogCategoriesIndexRoute,
  AuthenticatedCatalogProductsIndexRoute:
    AuthenticatedCatalogProductsIndexRoute,
  AuthenticatedCatalogTagsIndexRoute: AuthenticatedCatalogTagsIndexRoute,
  AuthenticatedCatalogCategoriesCategoryIdEditRoute:
    AuthenticatedCatalogCategoriesCategoryIdEditRoute,
  AuthenticatedCatalogProductsProductIdEditRoute:
    AuthenticatedCatalogProductsProductIdEditRoute,
  AuthenticatedCatalogTagsTagIdEditRoute:
    AuthenticatedCatalogTagsTagIdEditRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
